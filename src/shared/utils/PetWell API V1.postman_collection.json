{
	"info": {
		"_postman_id": "58e7215f-be6c-41b4-8d11-fb386ca4598b",
		"name": "PetWell API V1",
		"description": "Postman collection for PetWell authentication endpoints.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "41118292",
		"_collection_link": "https://pixel4-7319.postman.co/workspace/Pixel-Workspace~b79b5054-65f0-4b56-89b7-4102885003b8/collection/41118292-58e7215f-be6c-41b4-8d11-fb386ca4598b?action=share&source=collection_link&creator=41118292"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Register Human Owner",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"username\": \"johndoe\",\"name\": \"John Doe\",\"email\": \"johndoe@gmail.com\",\"password\": \"secure123\",\"role\": \"Individual\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/register/human-owner",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register",
								"human-owner"
							]
						},
						"description": "Registers a new human owner and sends a 6-digit OTP to the email."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"username\": \"johndoe\",\"name\": \"John Doe\",\"email\": \"john.doe@example.com\",\"password\": \"secure123\",\"role\": \"Individual\"}"
								},
								"url": {
									"raw": "{{baseUrl}}/auth/register/human-owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"register",
										"human-owner"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\"message\": \"OTP sent to email\"}"
						}
					]
				},
				{
					"name": "Register Staff",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"username\": \"janestaff\",\"name\": \"Jane Smith\",\"email\": \"jane.smith@example.com\",\"password\": \"secure123\",\"role\": \"Veterinarian\",\"business_id\": \"550e8400-e29b-41d4-a716-446655440000\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/register/staff",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register",
								"staff"
							]
						},
						"description": "Registers a new staff member under a business and sends a 6-digit OTP."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"username\": \"janestaff\",\"name\": \"Jane Smith\",\"email\": \"jane.smith@example.com\",\"password\": \"secure123\",\"role\": \"Veterinarian\",\"business_id\": \"550e8400-e29b-41d4-a716-446655440000\"}"
								},
								"url": {
									"raw": "{{baseUrl}}/auth/register/staff",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"register",
										"staff"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\"message\": \"OTP sent to email\"}"
						}
					]
				},
				{
					"name": "Register Business",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"PetWell Clinic\",\"email\": \"clinic@example.com\",\"password\": \"secure123\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/register/business",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register",
								"business"
							]
						},
						"description": "Registers a new business and sends a 6-digit OTP to the email."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\": \"PetWell Clinic\",\"email\": \"clinic@example.com\",\"password\": \"secure123\"}"
								},
								"url": {
									"raw": "{{baseUrl}}/auth/register/business",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"register",
										"business"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\"message\": \"OTP sent to email\"}"
						}
					]
				},
				{
					"name": "Verify OTP",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"identifier\": \"john.doe@example.com\",\"otp_code\": \"123456\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/verify-otp",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"verify-otp"
							]
						},
						"description": "Verifies the 6-digit OTP sent to the user's email or username."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"identifier\": \"john.doe@example.com\",\"otp_code\": \"123456\"}"
								},
								"url": {
									"raw": "{{baseUrl}}/auth/verify-otp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"verify-otp"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\"message\": \"OTP verified successfully\"}"
						}
					]
				},
				{
					"name": "Resend OTP",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"email\": \"john.doe@example.com\",\"otp_type\": \"Registration\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/resend-otp",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"resend-otp"
							]
						},
						"description": "Resends a 6-digit OTP for registration or password reset."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"email\": \"john.doe@example.com\",\"otp_type\": \"Registration\"}"
								},
								"url": {
									"raw": "{{baseUrl}}/auth/resend-otp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"resend-otp"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\"message\": \"OTP resent to email\"}"
						}
					]
				},
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"email\": \"john.doe@example.com\",\"password\": \"secure123\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						},
						"description": "Logs in a user with email or username and returns a JWT token."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"email\": \"john.doe@example.com\",\"password\": \"secure123\"}"
								},
								"url": {
									"raw": "{{baseUrl}}/auth/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"}"
						}
					]
				},
				{
					"name": "Forgot Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"identifier\": \"john.doe@example.com\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/forgot-password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"forgot-password"
							]
						},
						"description": "Sends a 6-digit OTP to the user's email or username for password reset."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"identifier\": \"john.doe@example.com\"}"
								},
								"url": {
									"raw": "{{baseUrl}}/auth/forgot-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"forgot-password"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\"message\": \"OTP sent to email\"}"
						}
					]
				},
				{
					"name": "Reset Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"email\": \"john.doe@example.com\",\"otp_code\": \"123456\",\"new_password\": \"newsecure123\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/reset-password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"reset-password"
							]
						},
						"description": "Resets the user's password using the OTP."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"email\": \"john.doe@example.com\",\"otp_code\": \"123456\",\"new_password\": \"newsecure123\"}"
								},
								"url": {
									"raw": "{{baseUrl}}/auth/reset-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"reset-password"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\"message\": \"Password reset successfully\"}"
						}
					]
				}
			]
		},
		{
			"name": "Licenses",
			"item": [
				{
					"name": "Create License",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"purchase_date\": \"2025-06-20\",\n  \"due_date\": \"2026-06-20\",\n  \"details\": \"Annual pet care license 1\",\n  \"license_plan\": \"Premium\",\n  \"duration\": 12,\n  \"status\": \"Active\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/licenses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"licenses"
							]
						},
						"description": "Creates a new license for a HumanOwner or Business. Requires JWT authentication with a user matching the `entity_id` and `entity_type`. Errors: 404 (Entity not found), 401 (Unauthorized)."
					},
					"response": []
				},
				{
					"name": "Get Licenses by Entity",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/licenses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"licenses"
							]
						},
						"description": "Retrieves all licenses for a specific entity (HumanOwner or Business) by `entity_type` and `entity_id`. Requires JWT authentication with a user matching the `entity_id` and `entity_type`. Errors: 401 (Unauthorized)."
					},
					"response": []
				}
			]
		},
		{
			"name": "Pets",
			"item": [
				{
					"name": "Get All Breeds and Species",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has species and breeds', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('species');",
									"    pm.expect(jsonData).to.have.property('breeds');",
									"    pm.expect(jsonData.species).to.be.an('array');",
									"    pm.expect(jsonData.breeds).to.be.an('object');",
									"});",
									"",
									"// Save Dog and Cat breed IDs for later use",
									"var jsonData = pm.response.json();",
									"var dogSpecies = jsonData.species.find(s => s.name === 'Dog');",
									"var catSpecies = jsonData.species.find(s => s.name === 'Cat');",
									"if (dogSpecies && jsonData.breeds[dogSpecies.id]) {",
									"    var labrador = jsonData.breeds[dogSpecies.id].find(b => b.name === 'Labrador Retriever');",
									"    if (labrador) {",
									"        pm.environment.set('dogBreedId', labrador.id);",
									"    }",
									"}",
									"if (catSpecies && jsonData.breeds[catSpecies.id]) {",
									"    var persian = jsonData.breeds[catSpecies.id].find(b => b.name === 'Persian');",
									"    if (persian) {",
									"        pm.environment.set('catBreedId', persian.id);",
									"    }",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/pets/breeds-species",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"pets",
								"breeds-species"
							]
						},
						"description": "Retrieves all breed species and their associated breeds."
					},
					"response": []
				},
				{
					"name": "Create Pet (Dog)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has pet ID', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.environment.set('petId', jsonData.id);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Buddy\",\n  \"age\": 3,\n  \"weight\": 25,\n  \"breed_species_id\": \"{{dogSpeciesId}}\",\n  \"breed_id\": \"{{dogBreedId}}\",\n  \"location\": \"New York, NY\",\n  \"latitude\": 40.7128,\n  \"longitude\": -74.0060,\n  \"spay_neuter\": true,\n  \"color\": \"Golden\",\n  \"dob\": \"2022-01-15\",\n  \"microchip\": \"123456789012345\",\n  \"notes\": \"Friendly and energetic\",\n  \"status\": \"Active\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/pets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"pets"
							]
						},
						"description": "Creates a pet profile for a dog (e.g., Labrador Retriever)."
					},
					"response": []
				},
				{
					"name": "Create Pet (Cat)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has pet ID', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.environment.set('petId', jsonData.id);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Whiskers\",\n  \"age\": 2,\n  \"weight\": 4,\n  \"breed_species_id\": \"{{catSpeciesId}}\",\n  \"breed_id\": \"{{catBreedId}}\",\n  \"location\": \"San Francisco, CA\",\n  \"latitude\": 37.7749,\n  \"longitude\": -122.4194,\n  \"spay_neuter\": true,\n  \"color\": \"White\",\n  \"dob\": \"2023-03-10\",\n  \"microchip\": \"987654321098765\",\n  \"notes\": \"Loves to nap in the sun\",\n  \"status\": \"Active\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/pets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"pets"
							]
						},
						"description": "Creates a pet profile for a cat (e.g., Persian)."
					},
					"response": []
				},
				{
					"name": "Get All Pets by Owner",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response is an array', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/pets/owner",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"pets",
								"owner"
							]
						},
						"description": "Retrieves all pet profiles owned by the authenticated human owner."
					},
					"response": []
				},
				{
					"name": "Get Pet by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has pet details', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.expect(jsonData).to.have.property('name');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/pets/{{petId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"pets",
								"{{petId}}"
							]
						},
						"description": "Retrieves a single pet profile by its ID."
					},
					"response": []
				},
				{
					"name": "Update Pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has updated pet details', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.expect(jsonData.name).to.equal('Buddy Updated');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Buddy Updated\",\n  \"age\": 4,\n  \"weight\": 26,\n  \"location\": \"Boston, MA\",\n  \"latitude\": 42.3601,\n  \"longitude\": -71.0589,\n  \"notes\": \"Still friendly, loves walks\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/pets/{{petId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pets",
								"{{petId}}"
							]
						},
						"description": "Updates a pet profile by its ID."
					},
					"response": []
				}
			]
		},
		{
			"name": "Root ",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"email\":\"john@example.com\",\"password\":\"Password123\"}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "token",
			"value": "",
			"type": "string"
		},
		{
			"key": "base_url",
			"value": "",
			"type": "default"
		}
	]
}